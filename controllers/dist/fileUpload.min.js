"use strict";var File=require("../models/File"),cloudinary=require("cloudinary").v2;function isFileTypeSupported(e,r){return r.includes(e)}function uploadFileToCloudinary(r,s,o){var a,t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,a={folder:s,resource_type:"auto",timeout:12e4},o&&(a.quality=o),console.log("Uploading to Cloudinary with options:",a),console.log("File temp path:",r.tempFilePath),e.next=7,regeneratorRuntime.awrap(cloudinary.uploader.upload(r.tempFilePath,a));case 7:return t=e.sent,console.log("Cloudinary response:",t),e.abrupt("return",t);case 12:throw e.prev=12,e.t0=e.catch(0),console.error("Error uploading to Cloudinary:",e.t0),e.t0;case 16:case"end":return e.stop()}},null,null,[[0,12]])}exports.localFileUpload=function(r,s){var o,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:try{o=r.files.file,console.log("FILE ->",o),a=__dirname+"/files/"+Date.now()+".".concat(o.name.split(".")[1]),console.log("PATH-> ",a),o.mv(a,function(e){if(e)return console.error(e),s.status(500).json({success:!1,message:"Error in file upload"})}),s.json({success:!0,message:"Local file upload successfully"})}catch(e){console.error("Not able to upload the file on server:",e),s.status(500).json({success:!1,message:"Server error in file upload"})}case 1:case"end":return e.stop()}})},exports.imageUpload=function(r,s){var o,a,t,n,l,u,i;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,o=r.body,a=o.name,t=o.tags,n=o.email,console.log(a,t,n),l=r.files.imageFile,console.log(l),u=["jpg","jpeg","png"],isFileTypeSupported(l.name.split(".")[1].toLowerCase(),u)){e.next=9;break}return e.abrupt("return",s.status(400).json({success:!1,message:"File format not supported"}));case 9:return e.next=11,regeneratorRuntime.awrap(uploadFileToCloudinary(l,"Web"));case 11:return i=e.sent,console.log(i),e.next=15,regeneratorRuntime.awrap(File.create({name:a,tags:t,email:n,imageUrl:i.secure_url}));case 15:e.sent,s.json({success:!0,imageUrl:i.secure_url,message:"Image successfully uploaded"}),e.next=23;break;case 19:e.prev=19,e.t0=e.catch(0),console.error(e.t0),s.status(500).json({success:!1,message:"Something went wrong",error:e.t0.message});case 23:case"end":return e.stop()}},null,null,[[0,19]])},exports.videoUpload=function(r,s){var o,a,t,n,l,u,i;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,o=r.body,a=o.name,t=o.tags,n=o.email,console.log(a,t,n),r.files&&r.files.videoFile){e.next=5;break}return e.abrupt("return",s.status(400).json({success:!1,message:"No video file uploaded"}));case 5:if(l=r.files.videoFile,console.log("Video file:",l),u=["mp4","mov"],isFileTypeSupported(l.name.split(".")[1].toLowerCase(),u)){e.next=11;break}return e.abrupt("return",s.status(400).json({success:!1,message:"File format not supported"}));case 11:return e.next=13,regeneratorRuntime.awrap(uploadFileToCloudinary(l,"Web"));case 13:return i=e.sent,console.log("Cloudinary response:",i),e.next=17,regeneratorRuntime.awrap(File.create({name:a,tags:t,email:n,imageUrl:i.secure_url}));case 17:e.sent,s.json({success:!0,videoUrl:i.secure_url,message:"Video successfully uploaded"}),e.next=25;break;case 21:e.prev=21,e.t0=e.catch(0),console.error("Video upload error:",e.t0),s.status(500).json({success:!1,message:"Video upload failed",error:e.t0.message});case 25:case"end":return e.stop()}},null,null,[[0,21]])},exports.imageSizeReducer=function(r,s){var o,a,t,n,l,u,i;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,o=r.body,a=o.name,t=o.tags,n=o.email,console.log(a,t,n),r.files&&r.files.imageFile){e.next=5;break}return e.abrupt("return",s.status(400).json({success:!1,message:"No image file uploaded"}));case 5:if(l=r.files.imageFile,console.log("Image file:",l),u=["jpg","jpeg","png"],isFileTypeSupported(l.name.split(".")[1].toLowerCase(),u)){e.next=11;break}return e.abrupt("return",s.status(400).json({success:!1,message:"File format not supported"}));case 11:return e.next=13,regeneratorRuntime.awrap(uploadFileToCloudinary(l,"Web",30));case 13:return i=e.sent,console.log("Cloudinary response:",i),e.next=17,regeneratorRuntime.awrap(File.create({name:a,tags:t,email:n,imageUrl:i.secure_url}));case 17:e.sent,s.json({success:!0,imageUrl:i.secure_url,message:"Image successfully uploaded with reduced size"}),e.next=25;break;case 21:e.prev=21,e.t0=e.catch(0),console.error("Image size reducer error:",e.t0),s.status(500).json({success:!1,message:"Image compression failed",error:e.t0.message});case 25:case"end":return e.stop()}},null,null,[[0,21]])};
//# sourceMappingURL=fileUpload.min.js.map
